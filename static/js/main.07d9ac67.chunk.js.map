{"version":3,"sources":["components/ContactForm/ContactForm.module.css","Transitions/Slide.module.css","components/Contacts/ContactsList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/PhoneBook/PhoneBook.module.css","components/WarningMessage/WarningMessage.module.css","Transitions/FilterTransition.module.css","Transitions/MessageTransition.module.css","redux/phoneBookActions.jsx","components/Contacts/ContactsList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/PhoneBook/PhoneBook.jsx","components/WarningMessage/WarningMessage.jsx","components/App/App.jsx","components/App/AppContainer.jsx","redux/phoneBookReducer.jsx","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","updateFilter","ContactList","contacts","deleteContacts","TransitionGroup","component","className","styles","item","map","id","name","number","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","type","button","onClick","ContactForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","clearState","this","form","onSubmit","htmlFor","label","inputName","onChange","inputNumber","pattern","Component","Filter","onChangeFilter","input","PhoneBook","title","WarningMessage","alert","App","didMount","contactIn","isAlreadyAdded","contact","find","toLowerCase","includes","contactToAdd","uuidv4","prevState","setTimeout","filterContacts","filter","changeFilter","JSON","parse","localStorage","getItem","forEach","setItem","stringify","filteredContacts","app","in","appear","logo","length","filterTransition","messageTransition","connect","dispatch","phoneBookReducer","createReducer","action","payload","push","store","configureStore","reducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.07d9ac67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3XHMt\",\"button\":\"ContactForm_button__1FBVo\",\"inputNumber\":\"ContactForm_inputNumber__YfzKK\",\"inputName\":\"ContactForm_inputName__1r-__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Slide_enter__dTPqv\",\"enterActive\":\"Slide_enterActive__33qNh\",\"exit\":\"Slide_exit__3z-F-\",\"exitActive\":\"Slide_exitActive__3l9Ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__3np9M\",\"item\":\"ContactsList_item__iA8HY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Nojd\",\"input\":\"Filter_input__3rwtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2iysm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PhoneBook_title__3j5db\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"WarningMessage_alert__3FZD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterTransition_enter__2589S\",\"enterActive\":\"FilterTransition_enterActive__2PmQZ\",\"exit\":\"FilterTransition_exit__2UcMd\",\"exitActive\":\"FilterTransition_exitActive__3ddPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"MessageTransition_enter__1lXHS\",\"enterActive\":\"MessageTransition_enterActive__1Us17\",\"exit\":\"MessageTransition_exit__17mp-\",\"exitActive\":\"MessageTransition_exitActive__2iG-u\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nexport const addContact = createAction(\"ADD_CONTACT\");\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\");\r\nexport const updateFilter = createAction(\"UPDATE_FILTER\");\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport slideTransition from \"../../Transitions/Slide.module.css\";\r\nimport styles from \"./ContactsList.module.css\";\r\nconst ContactList = ({ contacts, deleteContacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.item}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition\r\n          key={id}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames={slideTransition}\r\n        >\r\n          <li>\r\n            <p>\r\n              {name} : {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className={styles.button}\r\n              onClick={() => deleteContacts(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name) {\r\n      this.props.onAddContact({ ...this.state });\r\n    }\r\n    this.clearState();\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\" className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.inputName}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\">\r\n          Number\r\n          <input\r\n            className={styles.inputNumber}\r\n            pattern=\"[0-9]+$\"\r\n            id=\"number\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onChangeFilter }) => (\r\n  <label htmlFor=\"filter\" className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      id=\"filter\"\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from \"./PhoneBook.module.css\";\r\n\r\nconst PhoneBook = () => <h1 className={styles.title}>PhoneBook</h1>;\r\nexport default PhoneBook;\r\n","import React from \"react\";\r\nimport styles from \"./WarningMessage.module.css\";\r\n\r\nconst WarningMessage = () => {\r\n  return (\r\n    <div className={styles.alert}>\r\n      <p>Contact already exists!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WarningMessage;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Contacts from \"../Contacts/ContactsList\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport PhoneBook from \"../PhoneBook/PhoneBook\";\r\nimport WarningMessage from \"../WarningMessage/WarningMessage\";\r\nimport slideTransition from \"../../Transitions/Slide.module.css\";\r\nimport filterTransition from \"../../Transitions/FilterTransition.module.css\";\r\nimport messageTransition from \"../../Transitions/MessageTransition.module.css\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    didMount: false,\r\n    contactIn: false,\r\n  };\r\n  isAlreadyAdded = (contact, contacts) =>\r\n    contacts.find((item) =>\r\n      item.name.toLowerCase().includes(contact.name.toLowerCase())\r\n    );\r\n  addContact = (contact) => {\r\n    const { contacts } = this.props;\r\n\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    !this.isAlreadyAdded(contact, contacts)\r\n      ? this.props.addContact(contactToAdd)\r\n      : this.setState(\r\n          (prevState) => ({ contactIn: !prevState.contactIn }),\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState((prevState) => ({\r\n                contactIn: !prevState.contactIn,\r\n              }));\r\n            }, 1000)\r\n        );\r\n  };\r\n  deleteContact = (id) => {\r\n    this.props.deleteContact(id);\r\n  };\r\n  filterContacts = (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.props.updateFilter(e.target.value);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ didMount: true });\r\n\r\n    const contacts =\r\n      JSON.parse(localStorage.getItem(\"contacts\")) || this.props.contacts;\r\n\r\n    contacts.forEach((contact) => {\r\n      const contactToAdd = {\r\n        ...contact,\r\n        id: uuidv4(),\r\n      };\r\n      this.props.addContact(contactToAdd);\r\n    });\r\n  }\r\n  componentDidUpdate(prevState) {\r\n    const { contacts } = this.props;\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { didMount, contactIn } = this.state;\r\n    const { contacts, filter } = this.props;\r\n    const filteredContacts = this.filterContacts(contacts, filter);\r\n\r\n    return (\r\n      <div className={styles.app}>\r\n        <div>\r\n          <CSSTransition\r\n            in={didMount}\r\n            timeout={250}\r\n            classNames={slideTransition}\r\n            appear\r\n          >\r\n            <PhoneBook className={styles.logo} />\r\n          </CSSTransition>\r\n          <ContactForm onAddContact={this.addContact} />\r\n          {contacts.length > 0 && (\r\n            <div>\r\n              <h2>Contacts</h2>\r\n              <CSSTransition\r\n                in={contacts.length > 1}\r\n                timeout={250}\r\n                classNames={filterTransition}\r\n                unmountOnExit\r\n              >\r\n                <Filter onChangeFilter={this.changeFilter} />\r\n              </CSSTransition>\r\n              <Contacts\r\n                contacts={filteredContacts}\r\n                deleteContacts={this.deleteContact}\r\n              />\r\n            </div>\r\n          )}\r\n          <CSSTransition\r\n            in={contactIn}\r\n            timeout={250}\r\n            classNames={messageTransition}\r\n            unmountOnExit\r\n          >\r\n            <WarningMessage />\r\n          </CSSTransition>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  updateFilter,\r\n  addContact,\r\n  deleteContact,\r\n} from \"../../redux/phoneBookActions\";\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.filter,\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFilter: (filter) => dispatch(updateFilter(filter)),\r\n  addContact: (contact) => dispatch(addContact(contact)),\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { updateFilter, addContact, deleteContact } from \"./phoneBookActions\";\r\n\r\nconst initialStore = {\r\n  contacts: [],\r\n  filter: \"\",\r\n};\r\n\r\nexport const phoneBookReducer = createReducer(initialStore, {\r\n  [updateFilter]: (state, action) => {\r\n    const { payload } = action;\r\n    state.filter = payload;\r\n  },\r\n  [addContact]: (state, action) => {\r\n    const { payload } = action;\r\n    state.contacts.push(payload);\r\n  },\r\n  [deleteContact]: (state, action) => {\r\n    const { payload } = action;\r\n    return {\r\n      ...state,\r\n      contacts: state.contacts.filter((contact) => contact.id !== payload),\r\n    };\r\n  },\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { phoneBookReducer } from \"./phoneBookReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: phoneBookReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App/AppContainer\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}